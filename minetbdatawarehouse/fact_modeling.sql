-- -- ## FACT MODELING SCRIPT FOR MINE-TB DATA WAREHOUSE ## -- --

-- ## --
-- NOTE:
-- Don't break single query in multiple lines. 
-- ## -- 


-- Drop existing fact tables
drop table if exists fact_screening;
drop table if exists fact_sputumresults;
drop table if exists fact_treatment;

-- Create fact tables
create table fact_screening		(fact_id int(11) not null auto_increment, year int(11) default null, month int(11) default null, week int(11) default null, quarter int(11) default null, strategy varchar(45) default null, province varchar(45) default null, district varchar(45) default null, facility varchar(45) default null, screener varchar(45) default null, screened varchar(45) default null, suspects int(11) default null, non_suspects int(11) default null, last_updated datetime default null, primary key (fact_id));
create table fact_sputumresults	(fact_id int(11) not null auto_increment, year int(11) default null, month int(11) default null, week int(11) default null, quarter int(11) default null, strategy varchar(45) default null, province varchar(45) default null, district varchar(45) default null, facility varchar(45) default null, screener varchar(45) default null, total_submissions int null, accepted_submissions int null, rejected_submissions int null, total_results int null, mtb_positives int null, rif_resistants int null, mtb_negatives int null, errors int null, invalid int null, no_results int null, unsuccessful int null, leaked int null, insufficient_quantity int null, others int null, incorrect_paperwork int null, rejected int null, last_updated datetime default null,primary key (fact_id));
CREATE TABLE fact_treatment (fact_id int(11) NOT NULL AUTO_INCREMENT, year int(11) DEFAULT NULL, month int(11) DEFAULT NULL, week int(11) DEFAULT NULL, quarter int(11) DEFAULT NULL, strategy varchar(45) DEFAULT NULL, province varchar(45) DEFAULT NULL, district varchar(45) DEFAULT NULL, facility varchar(45) DEFAULT NULL,screener varchar(45) DEFAULT NULL,tx_initiated int(11) DEFAULT NULL, tx_not_initiated int(11) DEFAULT NULL, patient_refused_tx int(11) DEFAULT NULL, patient_not_found int(11) DEFAULT NULL, contact_info_missing int(11) DEFAULT NULL,patient_died int(11) DEFAULT NULL, already_on_tx int(11) DEFAULT NULL,tx_initiated_at_clinic int(11) DEFAULT NULL, tx_initiated_tranferred int(11) DEFAULT NULL, followup_negative int(11) DEFAULT NULL, followup_pos_scanty int(11) DEFAULT NULL, followup_pos_plus_plus int(11) DEFAULT NULL,followup_pos_plus_plus_plus int(11) DEFAULT NULL, followup_leaked int(11) DEFAULT NULL,  patient_cured int(11) DEFAULT NULL,  tx_completed int(11) DEFAULT NULL,  tx_default int(11) DEFAULT NULL,  tx_failure int(11) DEFAULT NULL,  patient_death int(11) DEFAULT NULL,  patient_transferred_out int(11) DEFAULT NULL, last_updated datetime default null, PRIMARY KEY (`fact_id`));

-- Drop, Create Screening Data 
drop table if exists screening_data;
create table screening_data select u.username, t.year, t.month, t.week_of_year as week, t.quarter, pa.location as location_id, l.location_name as facility, l.city_village as district, l.state_province as province, s.patient_id, p.identifier as identifier, pta.suspect_status from enc_screening as s inner join dim_user as u on u.username = s.provider inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_patient as p on p.patient_id = s.patient_id inner join dim_location as l on l.location_id = pa.location      inner join dim_time as t on t.year = year(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.month = month(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.week_of_year = week(s.date_entered,6) left outer join person_attribute_merged as pta on pta.person_id = s.patient_id;

-- Insert Screening facts
insert into fact_screening select 0 as fact_id, d.year, d.month, d.week, d.quarter, c.full_name as strategy, d.province, d.district, d.facility, concat(pn.given_name," ",pn.family_name," - ", d.username) as screener, count(patient_id) as screened, sum(if(d.suspect_status = 'Suspect', 1, 0)) as suspects, sum(if(d.suspect_status = 'Non-Suspect', 1, 0)) as non_suspects, now() as last_updated from screening_data as d inner join dim_user as u on u.username = d.username inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_concept as c on c.concept_id = pa.screening_type inner join person_name as pn on pn.person_id = u.person_id group by pa.screening_type, year, month, week, quarter, province, district, facility, screener;

-- Drop, Create Sputum Data 
drop table if exists sputum_data;
create table sputum_data (username varchar(50), year int(11), month int(11), week int(11), quarter int(11), location_id int(11), facility varchar(255) default null, district varchar(255) default null, province varchar(255) default null, patient_id int(11) default null, identifier varchar(50) default null, form_name varchar(50), submission_status varchar(50), genexpert_result varchar(50), rif_result varchar(50));
 -- Insert data from sputum submission form
insert into sputum_data select u.username, t.year, t.month, t.week_of_year as week, t.quarter, pa.location as location_id, l.location_name as facility, l.city_village as district, l.state_province as province, s.patient_id, p.identifier as identifier, 'Sputum Submission', s.sputum_sample, null, null from enc_sputum_submission as s inner join dim_user as u on u.username = s.provider inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_patient as p on p.patient_id = s.patient_id inner join dim_location as l on l.location_id = pa.location inner join dim_time as t on t.year = year(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.month = month(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.week_of_year = week(s.date_entered,6) left outer join person_attribute_merged as pta on pta.person_id = s.patient_id;
 -- Insert data from sputum result form
insert into sputum_data select u.username, t.year, t.month, t.week_of_year as week, t.quarter, pa.location as location_id, l.location_name as facility, l.city_village as district, l.state_province as province, s.patient_id, p.identifier as identifier, 'Sputum Result', null, s.genexpert_result , s.rif_result from enc_sputum_result as s inner join dim_user as u on u.username = s.provider inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_patient as p on p.patient_id = s.patient_id inner join dim_location as l on l.location_id = pa.location inner join dim_time as t on t.year = year(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.month = month(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.week_of_year = week(s.date_entered,6) left outer join person_attribute_merged as pta on pta.person_id = s.patient_id;

-- Insert sputum facts
insert into fact_sputumresults select 0 as fact_id, d.year, d.month, d.week, d.quarter, c.full_name as strategy, d.province, d.district, d.facility, concat(pn.given_name," ",pn.family_name," - ", d.username) as screener, sum(if((d.form_name = 'Sputum Submission'), 1, 0)) as total_submissions, sum(if((d.form_name = 'Sputum Submission' and d.submission_status = 'Accept'), 1, 0)) as accpected_submissions, sum(if((d.form_name = 'Sputum Submission' and d.submission_status = 'Reject'), 1, 0)) as rejected_submissions, sum(if((d.form_name = 'Sputum Result'), 1, 0)) as total_results, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%MTB Positive%'), 1, 0)) as mtb_positive, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%MTB Positive%' and d.rif_result = 'Yes'), 1, 0)) as rif_resistants, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%MTB Negative%'), 1, 0)) as mtb_negatives, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Error%'), 1, 0)) as errors, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Invalid%'), 1, 0)) as invalid, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%No Result Found%'), 1, 0)) as no_results, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Unsuccessful%'), 1, 0)) as unsuccessful, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Leaked%'), 1, 0)) as leaked, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Insufficient Quantity%'), 1, 0)) as insufficient_quantity, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Other%'), 1, 0)) as others, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Incorrect Paper%'), 1, 0)) as incorrect_paper, sum(if((d.form_name = 'Sputum Result' and d.genexpert_result like '%Rejected%'), 1, 0)) as rejected, now() as last_updated from sputum_data as d inner join dim_user as u on u.username = d.username inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_concept as c on c.concept_id = pa.screening_type inner join person_name as pn on pn.person_id = u.person_id group by pa.screening_type, year, month, week, quarter, province, district, facility, screener;

-- Drop, Create Treatment Data
drop table if exists treatment_data;
create table treatment_data (username varchar(50), year int(11), month int(11), week int(11), quarter int(11), location_id int(11), facility varchar(255) default null, district varchar(255) default null, province varchar(255) default null, patient_id int(11) default null, identifier varchar(50) default null, form_name varchar(50), treatment_initiated varchar(50), reason_treatment_not_initiated varchar(50), treatment_initiated_at varchar(50), followup_smear_result varchar(50), treatment_outcome varchar(50));
 -- Insert data from treatment initiation form
insert into treatment_data select u.username, t.year, t.month, t.week_of_year as week, t.quarter, pa.location as location_id, l.location_name as facility, l.city_village as district, l.state_province as province, s.patient_id, p.identifier as identifier, 'Treatment Initiation', s.treatment_initiated, s.reason_treatment_not_initiated, s.treatment_initiation, null, null from enc_treatment_initiation as s inner join dim_user as u on u.username = s.provider inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_patient as p on p.patient_id = s.patient_id inner join dim_location as l on l.location_id = pa.location      inner join dim_time as t on t.year = year(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.month = month(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.week_of_year = week(s.date_entered,6) left outer join person_attribute_merged as pta on pta.person_id = s.patient_id;
 -- Insert data from treatment followup form
insert into treatment_data select u.username, t.year, t.month, t.week_of_year as week, t.quarter, pa.location as location_id, l.location_name as facility, l.city_village as district, l.state_province as province, s.patient_id, p.identifier as identifier, 'Treatment Followup', null, null, null, s.smear_result, null from enc_treatment_followup as s inner join dim_user as u on u.username = s.provider inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_patient as p on p.patient_id = s.patient_id inner join dim_location as l on l.location_id = pa.location inner join dim_time as t on t.year = year(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.month = month(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.week_of_year = week(s.date_entered,6) left outer join person_attribute_merged as pta on pta.person_id = s.patient_id;
 -- Insert data from treatment outcome form
insert into treatment_data select u.username, t.year, t.month, t.week_of_year as week, t.quarter, pa.location as location_id, l.location_name as facility, l.city_village as district, l.state_province as province, s.patient_id, p.identifier as identifier, 'Treatment Outcome', null, null, null, null, s.treatment_outcome from enc_treatment_outcome as s inner join dim_user as u on u.username = s.provider inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_patient as p on p.patient_id = s.patient_id inner join dim_location as l on l.location_id = pa.location inner join dim_time as t on t.year = year(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.month = month(DATE_ADD(s.date_entered, INTERVAL(1-DAYOFWEEK(s.date_entered)) DAY)) and t.week_of_year = week(s.date_entered,6) left outer join person_attribute_merged as pta on pta.person_id = s.patient_id;

 -- Insert treatment facts
insert into fact_treatment select 0 as fact_id, d.year, d.month, d.week, d.quarter, c.full_name as strategy, d.province, d.district, d.facility, concat(pn.given_name," ",pn.family_name," - ", d.username) as screener, sum(if((d.form_name = 'Treatment Initiation' and d.treatment_initiated = 'Yes'), 1, 0)) as treatment_initiated, sum(if((d.form_name = 'Treatment Initiation' and d.treatment_initiated = 'No'), 1, 0)) as treatment_not_initiated, sum(if((d.form_name = 'Treatment Initiation' and d.reason_treatment_not_initiated = 'Refused Treatment'), 1, 0)) as refused_treatment, sum(if((d.form_name = 'Treatment Initiation' and d.reason_treatment_not_initiated = 'Patient Not Found'), 1, 0)) as patient_not_found, sum(if((d.form_name = 'Treatment Initiation' and d.reason_treatment_not_initiated = 'Patient Missing Information'), 1, 0)) as information_missing, sum(if((d.form_name='Treatment Initiation' and d.reason_treatment_not_initiated = 'Patient Died'),1,0)) as patient_died, sum(if((d.form_name = 'Treatment Initiation' and d.reason_treatment_not_initiated = 'Patient already on Tx'), 1, 0)) as already_on_treatment, sum(if((d.form_name = 'Treatment Initiation' and d.treatment_initiated_at = 'Treatment Initiated at Clinic'), 1, 0)) as tx_at_clinic, sum(if((d.form_name = 'Treatment Initiation' and d.treatment_initiated_at = 'Transferred Out'), 1, 0)) as tx_transferred_out, sum(if((d.form_name = 'Treatment Followup' and (d.followup_smear_result = 'negative' OR d.followup_smear_result = 'MTB Negaitive')), 1, 0)) as negative, sum(if((d.form_name = 'Treatment Followup' and (d.followup_smear_result = 'positive' OR d.followup_smear_result = 'scanty positive' OR d.followup_smear_result = 'Positive (Scanty)')), 1, 0)) as positive_scanty, sum(if((d.form_name = 'Treatment Followup' and d.followup_smear_result = 'Positive (++)'), 1, 0)) as poitive_plus_plus, sum(if((d.form_name = 'Treatment Followup' and d.followup_smear_result = 'Positive (+++)'), 1, 0)) as positive_plus_plus_plus, sum(if((d.form_name = 'Treatment Followup' and d.followup_smear_result = 'Leaked'), 1, 0)) as leaked, sum(if((d.form_name = 'Treatment Outcome' and d.treatment_outcome = 'Cured'), 1, 0)) as cured, sum(if((d.form_name = 'Treatment Outcome' and d.treatment_outcome = 'Completed'), 1, 0)) as treatment_completed, sum(if((d.form_name = 'Treatment Outcome' and d.treatment_outcome = 'Default'), 1, 0)) as default_outcome,  sum(if((d.form_name = 'Treatment Outcome' and d.treatment_outcome = 'Failure'), 1, 0)) as failure,sum(if((d.form_name = 'Treatment Outcome' and d.treatment_outcome = 'Death'), 1, 0)) as death,  sum(if((d.form_name = 'Treatment Outcome' and d.treatment_outcome = 'Transferred Out'), 1, 0)) as transferred_out,  now() as last_updated from treatment_data as d inner join dim_user as u on u.username = d.username inner join person_attribute_merged as pa on pa.person_id = u.person_id inner join dim_concept as c on c.concept_id = pa.screening_type inner join person_name as pn on pn.person_id = u.person_id group by pa.screening_type, year, month, week, quarter, province, district, facility, screener;